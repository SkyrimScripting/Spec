project(SkyrimScripting.Spec VERSION 0.0.1 LANGUAGES CXX)

add_library(${PROJECT_NAME} INTERFACE)
target_include_directories(${PROJECT_NAME} INTERFACE include)
target_link_libraries(${PROJECT_NAME} INTERFACE CommonLibSSE::CommonLibSSE)

# find_package(GTest CONFIG REQUIRED)
# find_package(Catch2 CONFIG REQUIRED)
# find_path(BANDIT_INCLUDE_DIRS "bandit/adapters.h")
# find_path(SNOWHOUSE_INCLUDE_DIRS "snowhouse/assert.h")
# set(check_headers_tmp_dir "$ENV{TEMP}/${PROJECT_NAME}/check_headers")
# if(EXISTS "${check_headers_tmp_dir}")
#     file(REMOVE_RECURSE "${check_headers_tmp_dir}")
# endif()
# file(MAKE_DIRECTORY "${check_headers_tmp_dir}")
# add_custom_target(check_header_includes)
# file(GLOB_RECURSE HEADERS include/*.h)
# set(check_header_i 1)
# foreach(header ${HEADERS})
#     file(RELATIVE_PATH header_relative "${CMAKE_CURRENT_SOURCE_DIR}/include" "${header}")
#     string(REPLACE / "_" header_no_slashes "${header_relative}")
#     string(REPLACE " " "_" header_no_spaces "${header_no_slashes}")
#     set(header_filename "${header_no_spaces}")
#     set(header_cpp_tmp_file "${check_headers_tmp_dir}/${check_header_i}-${header_filename}.cpp")
#     string(REPLACE "\\" / header_cpp_tmp_file "${header_cpp_tmp_file}")
#     file(WRITE "${header_cpp_tmp_file}" "#include \"${header_relative}\"")
#     set(header_target "check_${header_filename}")
#     add_library("${header_target}" SHARED "${header_cpp_tmp_file}")
#     target_compile_options(${header_target} PRIVATE "/c")
#     target_link_libraries(${header_target} PRIVATE ${PROJECT_NAME})
#     target_link_libraries(${header_target} PRIVATE CommonLibSSE::CommonLibSSE Catch2::Catch2 GTest::gtest)
#     target_include_directories(${header_target} PRIVATE ${BANDIT_INCLUDE_DIRS})
#     target_include_directories(${header_target} PRIVATE ${SNOWHOUSE_INCLUDE_DIRS})
#     add_dependencies(check_header_includes ${header_target})
#     MATH(EXPR check_header_i "${check_header_i}+1")
# endforeach()
